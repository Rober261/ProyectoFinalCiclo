package com.pokergame.poker.controller;


import com.pokergame.poker.repository.*;
import com.pokergame.poker.model.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;



@RestController // This means that this class is a Controller
@RequestMapping("/demo") // This means URL's start with /demo (after Application path)
public class UserController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private UserRepository userRepository;

  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewUser (@RequestParam String name
      , @RequestParam String password,@RequestParam float tokens,@RequestParam boolean premium) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    User n = new User();
    n.name = name;
    n.password = password;
    n.tokens = tokens;
    n.premium = premium;
    userRepository.save(n);
    return "Saved";
  }
  // @GetMapping(path="/prueba")
  
  // public @ResponseBody User getUser() {
  //   return "index";
  // }

  @GetMapping("/all")
  public @ResponseBody Iterable<User> getAllUsers() {
    // This returns a JSON or XML with the users
    return userRepository.findAll();
  }

  @GetMapping("/algo")
  public String anonima() {
      return "Prueba de algo";
  }
  
  @GetMapping("/eduardo")
  public @ResponseBody String hola() {
    // This returns a JSON or XML with the users
    return "hola eduardo";
  }

  
}